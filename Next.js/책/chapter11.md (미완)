# 배포 플랫폼

- 만든 웹 어플리케이션을 어떻게 배포하고 서비스할지?
- 수많은 호스팅 업체나 클라우드 플랫폼 서비스형 플랫폼을 사용할수있는데 이중 어떤것을 사용할지?

## 11.1 다양한 배포 플랫폼

- Vercel,Netlify,Heroku 같은 클라우드 플랫폼에서의 배포과정은 거의 표준화되어 있어 누구나 접근이쉽도록 간소화되어있다
- AWS,Azure,DigitalOcean등과 같은 클라우드 서비스 제공업체는 배포과정 전체를 완전히 제어할수있도록 지원한다

## 11.2 Vercel에 배포하기

- Vercel에 배포하면 따로 설정할것이 거의 없고 CLI도구나 git 브랜치에 코드를 푸시한 후 자동으로 배포할수있도록 할수있음
- 정적사이트와 프런트엔드 프레임워크 만을 위해 만들어져서 Node.js 서버를 사용할수없는 단점도있음
  - But Vercel에서는 서버리스 펑션을 사용해서 서버사이드 렌더링 페이지를 지원
    - Vercel은 서버리스 펑션 설정 작업을 알아서 해준다.

1. Vercel에 GitHub , GitLab , Bitbucket 저장소를 연결

- 메인 브랜치로 병합하거나 푸시하는 경우 Vercel이 자동으로 해당어플리케이션을 상용서비스로 배포

2. 명령줄에서 모든것을 수동으로 할수 있음

- vercel --prod 명령으로 Vercel CLI도구를 사용해 상용서비스를 위한 애플리케이션을 바로 만들고 배포할수있음
- 애플리케이션에 관한 미리보기를 만들어서 로컬에서 테스트도 가능

> Vercel외에 Netlify로 배포할수있음 둘다 정적 웹사이트 배포에 있어서는 좋은 플랫폼

# 11.3 CDN에 정적 사이트 배포하기

- CDN의 한가지 중요한 특징은 바로 데이터센터가 지리적으로 분산되어있음 (전 세계에 서비스나 콘텐츠를 제공할떄 높은 가용성과 성능을 보여줌)
- 이탈리아에 있는사람은 이탈리아에 있는 센터에서 처리 , 브라질은 브라질

> Next.js로 만든 정적 생성 웹사이트의 경우 요청 시점에 페이지를 렌더링해야 할 서버가 필요가 없어 CDN에 배포하기에 안성맞춤

# 11.4 적절한 CDN 고르기

- AWS,Azure,Cloudeflare 등이 대표적
- AWS 배포과정
  - Github Actions나 GitLab Pipelines를 사용하여 정적 웹 애플리케이션을 만듬
  - AWS S3에 업로드하는 파이프라인을 만들고 AWS CDN인 CloudFront를 사용해서 사용자가 HTTP 요청을 통해 웹 어플리케이션의 정적자원에 접근할수있도록해야함
  - AWS 전용 DNS서비스인 AWS Route 53을 사용해서 도메인과 CloudFront를 연결
